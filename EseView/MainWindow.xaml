<Window x:Class="EseView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:EseView"
        Title="EseView" Height="350" Width="725"
        x:Name="MainFrame">
    <Window.Resources>
        <!--
            This style can be applied to a TextBox to make it look like a TextBlock, but be selectable and allow copying of its text.
            Based on a post at http://stackoverflow.com/a/9231349 by "juanjo.arana".
        -->
        <Style x:Key="SelectableTextBlock" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="-2,0,-2,0"/>
            <Style.Triggers>
                <!-- Revert to being an actual TextBlock when not focused or MouseOver'd. -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="False"/>
                        <Condition Property="IsFocused" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <!-- Add other {TemplateBinding} properties to this if they're ever used. -->
                                <TextBlock Text="{TemplateBinding Text}"
                                           Padding="0,0,0,0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.ColumnSpan="3" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Padding" Value="5,0,5,0"/>
                    </Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Padding" Value="5,0,5,0"/>
                    </Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="10,0,10,0"/>
                    </Style>
                </StackPanel.Resources>
                <Button Click="Open_Click">Open</Button>
                <Button Click="About_Click">About</Button>

                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>

                <Label>Index: </Label>
                <ComboBox x:Name="IndexSelector">
                    <ComboBoxItem IsSelected="True" FontWeight="Bold" x:Name="NoIndex">(primary key)</ComboBoxItem>
                </ComboBox>
                <Button Click="SetIndex_Click">Set</Button>
                <ToggleButton Click="IndexInfo_Click" x:Name="IndexInfoToggle">View Index Info</ToggleButton>

                <!-- TODO: enable this functionality. Hidden for now. -->
                <Grid Visibility="Collapsed">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>

                    <ToggleButton Click="ColumnInfo_Click" x:Name="ColumnInfoToggle">View Column Info</ToggleButton>
                </Grid>

                <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
                <Label>Search: </Label>
                <TextBox x:Name="SearchBox"
                         Width="100"
                         VerticalAlignment="Center"
                         PreviewKeyUp="SearchBox_PreviewKeyUp"/>
                <Button Click="Search_Click">Next Match</Button>
            </StackPanel>
            <ListView Grid.Row="1" x:Name="TableList"
                      ItemsSource="{Binding}" />
            <GridSplitter Grid.Row="1" Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch"
                          ShowsPreview="True"
                          Width="5" />
            <ListView Grid.Row="1" Grid.Column="2" x:Name="RowData"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      ScrollViewer.IsDeferredScrollingEnabled="False"
                      ItemsSource="{Binding}">
                <ListView.View>
                    <GridView x:Name="RowGrid"/>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="BorderBrush" Value="DarkGray"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <StatusBar Grid.Row="2" Grid.ColumnSpan="3">
                <TextBlock x:Name="StatusText"/>
            </StatusBar>
        </Grid>
        <Grid Visibility="Collapsed" x:Name="LoadingScreen">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" Opacity="0.7"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="1"
                       FontSize="25"
                       HorizontalAlignment="Center">
                Loading Database...
            </TextBlock>
        </Grid>
    </Grid>
</Window>
